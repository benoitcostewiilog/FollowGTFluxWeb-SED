<?php

/**
 * RefFournisseur
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    dev.mobilestock.fr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class RefFournisseur extends BaseRefFournisseur
{
	/*l'objet RefFourniseur renvoi par defaut la designation*/
	public function __toString()
	{
		return sprintf('%s', $this->getDesignationFour());
	}

	/* specifique LPDC : retourne l'emplacement de type magasin associé a ce fournisseur 	*/
	public function getContenantMagasin()
	{
		//geré statiquement a partir d'un tableau

		if($this->getDesignationFour() == "DURANCE") $codeEmp= "DURANCE";
		elseif($this->getDesignationFour() == "EBS ESPERANCE") $codeEmp= "EBS-ESPERANCE";
		elseif($this->getDesignationFour() == "OTB - HYGENA FACONNAGE") $codeEmp= "HYGENA";
		elseif($this->getDesignationFour() == "LABORATOIRES GILBERT") $codeEmp= "LABORATOIRES_GI";
		elseif($this->getDesignationFour() == "LABORATOIRES PROVENDI") $codeEmp= "LABORATOIRES_PR";
		elseif($this->getDesignationFour() == "OTB - Algotherm") $codeEmp= "OTB _ALGOTHERM";
		elseif($this->getDesignationFour() == "ROVAL") $codeEmp= "ROVAL";
		else $codeEmp= "inconnu";

		$req= Doctrine_Query::create()->from('RefContenant rf')->where('rf.id_emplacement = ?', $codeEmp);
		return $req->fetchOne();
	}

	/* retourne le nombre de commande recu de ce fournisseur */
	public function getNbCommandes($dateDeb,$dateFin)
	{


		//liste des commande dans la table ref_commande_four
		$req= Doctrine_Query::create()->from('RefLigComFour r')
			->where('r.num_commande IN (SELECT a.num_commande FROM RefCommandeFour a WHERE a.code_four = ?)',$this->getCodeFour())
			->andWhere('r.date_heure_reception < ?', $dateFin)->andWhere('r.date_heure_reception > ?', $dateDeb)
			->groupBy('r.num_commande');


		//liste des commande dans la table his_commande_four
		$req2= Doctrine_Query::create()->from('HisLigComFour r')
			->where('r.num_commande IN (SELECT a.num_commande FROM RefCommandeFour a WHERE a.code_four = ?)',$this->getCodeFour())
			->andWhere('r.date_heure_reception < ?', $dateFin)->andWhere('r.date_heure_reception > ?', $dateDeb)
			->groupBy('r.num_commande');

		return $req->count()+ $req2->count();
	}

	/* retourne le nombre de lignes recus de ce fournisseur */
	public function getNbLigne($dateDeb,$dateFin)
	{
		//liste des ligne de commande dans la table ref_commande_four
		$req= Doctrine_Query::create()->from('RefLigComFour r')
			->where('r.num_commande IN (SELECT a.num_commande FROM RefCommandeFour a WHERE a.code_four = ?)',$this->getCodeFour())
			->andWhere('r.date_heure_reception < ?', $dateFin)->andWhere('r.date_heure_reception > ?', $dateDeb);
		$nbLigne = $req->count();

		$req2= Doctrine_Query::create()->from('HisLigComFour r')
			->where('r.num_commande IN (SELECT a.num_commande FROM HisCommandeFour a WHERE a.code_four = ?)',$this->getCodeFour())
			->andWhere('r.date_heure_reception < ?', $dateFin)->andWhere('r.date_heure_reception > ?', $dateDeb);
		$nbLigne += $req2->count();

		return $nbLigne;

	}

	/* retourne le pourcentage de reception fait par ce fournisseur */
	public function getPourcentageReception($dateDeb,$dateFin)
	{
		//est egale au nb ligne du fournisseur sur nombre total de ligne

		$req1= Doctrine_Query::create()->from('RefLigComFour r')->where('r.date_heure_reception < ?', $dateFin)->andWhere('r.date_heure_reception > ?', $dateDeb);
		$req2= Doctrine_Query::create()->from('HisLigComFour r')->where('r.date_heure_reception < ?', $dateFin)->andWhere('r.date_heure_reception > ?', $dateDeb);
		$nbLigneTotal =$req1->count()+$req2->count();
		if ($nbLigneTotal=="0") { $nbLigneTotal=1;	}

		return round($this->getNbLigne($dateDeb,$dateFin)/$nbLigneTotal,3)*100;

	}

	public function getNomRaccourcie($taille = 40)
	{
		$susp =null;
		if ($taille<strlen($this->getDesignationFour())) {
			$susp = "...";
		}
		return mb_substr($this->getDesignationFour(),0,$taille,'UTF-8').$susp;
	}
}