<?php

/**
 * RefEmplacementTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RefEmplacementTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object RefEmplacementTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('RefEmplacement');
    }

    public static function findEmplacementReception() {
        $emplacement = self::getInstance()->find(RefEmplacement::CODE_EMPLACEMENT_RECEPTION);
        if (!$emplacement) {
            $emplacement = new RefEmplacement();
            $emplacement->setCodeEmplacement(RefEmplacement::CODE_EMPLACEMENT_RECEPTION);
            $emplacement->setLibelle(RefEmplacement::LIBELLE_EMPLACEMENT_RECEPTION);
            $emplacement->save();
        }

        return $emplacement;
    }
     public static function findEmplacementArrivage() {
        $emplacement = self::getInstance()->find(RefEmplacement::CODE_EMPLACEMENT_ARRIVAGE);
        if (!$emplacement) {
            $emplacement = new RefEmplacement();
            $emplacement->setCodeEmplacement(RefEmplacement::CODE_EMPLACEMENT_ARRIVAGE);
            $emplacement->setLibelle(RefEmplacement::LIBELLE_EMPLACEMENT_ARRIVAGE);
            $emplacement->save();
        }

        return $emplacement;
    }
    
       public static function findEmplacementNonConforme() {
        $emplacement = self::getInstance()->find(RefEmplacement::CODE_EMPLACEMENT_NONCONFORME);
        if (!$emplacement) {
            $emplacement = new RefEmplacement();
            $emplacement->setCodeEmplacement(RefEmplacement::CODE_EMPLACEMENT_NONCONFORME);
            $emplacement->setLibelle(RefEmplacement::LIBELLE_EMPLACEMENT_NONCONFORME);
            $emplacement->save();
        }

        return $emplacement;
    }

    public static function findEmplacementArrivageSansDestinataire() {
        $emplacement = self::getInstance()->find(RefEmplacement::CODE_EMPLACEMENT_RECEPTION_NON_NOMINATIF);
        if (!$emplacement) {
            $emplacement = new RefEmplacement();
            $emplacement->setCodeEmplacement(RefEmplacement::CODE_EMPLACEMENT_RECEPTION_NON_NOMINATIF);
            $emplacement->setLibelle(RefEmplacement::LIBELLE_EMPLACEMENT_RECEPTION_NON_NOMINATIF);
            $emplacement->save();
        }

        return $emplacement;
    }
}
