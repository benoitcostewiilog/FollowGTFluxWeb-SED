<?php

/**
 * sfGuardUser
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    licence
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser {
    /* renvoi le groupe d'un utilisateur */

    public function getGroup() {
        $lesGroupes = $this->getGroups();
        return $lesGroupes[0];
    }

    /* verifie qu'un utilisateur à la permission passée en parametre
      retourne vrai ou faux */

    public function aLeDroit($droit) {
        $lesPermissions = array();
        $lesPermissionsDuGroupe = $this->getGroup()->getPermissions();
        foreach ($lesPermissionsDuGroupe as $permission):
            $lesPermissions[] = $permission->getName();
        endforeach;
        return in_array($droit, $lesPermissions);
    }

    /*  verifie que l'utilisateur a des droits sur l'id utilisateur passé en parametre
      return vrai ou faux */

    public function verifieDroit($id_user) {
        //si c'est un super admin il a les droits
        if ($this->aLeDroit('gestion des utilisateurs niveau 2'))
            return true;
        //si c'est un chef de quai
        elseif ($this->aLeDroit('gestion des utilisateurs niveau 1')) {
            //il a les droits sur lui-meme
            if ($this->getId() == $id_user)
                return true;
            $user = Doctrine::getTable('SfGuardUser')->find($id_user);
            //il n'a pas les droit sur les utilisateurs qui on des droits sur les utilisateurs
            if ($user->aLeDroit('gestion des utilisateurs niveau 2') ||
                    $user->aLeDroit('gestion des utilisateurs niveau 1'))
                return false;
            //il a les droit sur les autres
            return true;
        }
        //ni SU ni chef de quai
        else
            return false;
    }

    /*  verifie que l'utilisateur a des droits sur l'id groupe passé en parametre
      return vrai ou faux */

    public function verifieDroitGroupe($id_group) {
        //si c'est un super admin il a les droits
        if ($this->aLeDroit('gestion des utilisateurs niveau 2'))
            return true;
        //si c'est un chef de quai
        elseif ($this->aLeDroit('gestion des utilisateurs niveau 1')) {
            //il a les droits sur son groupe ...
            if ($this->getGroup()->getId() == $id_group)
                return true;
            $groupe = Doctrine::getTable('SfGuardGroup')->find($id_group);
            //...et les groupes du meme niveau (tous sauf ceux qui ont les droit utilisateurs niveau 2)
            $nom_permissions = array();
            $droit_avances = array('gestion des utilisateurs niveau 2');
            //pour chacune des permissions du groupe
            foreach ($groupe->getPermissions() as $permission):
                $nom_permissions[] = $permission->getName();
            endforeach;
            //si le groupe en cours n'a pas des permission avance on retourne son nom
            $diff = array_diff($droit_avances, $nom_permissions);
            if (count($diff) == sizeof($droit_avances))
                return true;
            else
                return false;
        }
    }

    /* Retourne le nom de l'application ves laquelle l'utilisateur sera redirigé aprés son authentification	 */

    public function getRedirection() {
        //on recupere ds un array la liste des applicactions actives
        $listeAppli = sfConfig::get('app_sf_guard_plugin_liste_appli');

        //on recup les appli autoris?es pr l'utilisateur
        $listeAppliUser = sfGuardUserTable::getApplicationUtilisateur($this->getGroups());

        //on compare avec les applications actives
        $result = array_intersect($listeAppli, $listeAppliUser);

        /* traitement $result : 1 appli  -> redirection vers celle-ci
          >1 appli -> redirection vers aeromobile
          0 appli  -> redirection vers la page de login
         */
        $nbApp = sizeof($result);
        if ($nbApp != 0) {
            //on re-index le tableau de resultat
            $result = array_values($result);
            return ($nbApp > 1) ? 'aeromobile' : substr($result[0], 4);
        }

        return false;
    }

    public function getRedirectionModule() {
        //on recup les modules autoris?es pr l'utilisateur
        $listeModulesUser = sfGuardUserTable::getModulesUtilisateur($this->getGroups());

        if (count($listeModulesUser) == 1) {
            return $listeModulesUser[0];
        } else {
            return 'homepage';
        }
    }

}
